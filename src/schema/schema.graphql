schema {
  query: Query
  mutation: Mutation
}

type Query {
  allTasks(
    where: TaskItemFilterInput
    order: [TaskItemSortInput!]
  ): [TaskItem!]!
}

type Mutation {
  createTask(title: String!, description: String!): TaskItem!
  updateTaskStatus(id: Int!, status: TaskStatus!): TaskItem
}

type TaskItem {
  id: Int!
  title: String!
  description: String!
  status: TaskStatus!
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

input TaskItemFilterInput {
  and: [TaskItemFilterInput!]
  or: [TaskItemFilterInput!]
  id: ComparableInt32OperationFilterInput
  title: StringOperationFilterInput
  description: StringOperationFilterInput
  status: TaskStatusOperationFilterInput
}

input TaskItemSortInput {
  id: SortEnumType
  title: SortEnumType
  description: SortEnumType
  status: SortEnumType
}

input ComparableInt32OperationFilterInput {
  eq: Int
  neq: Int
  in: [Int!]
  nin: [Int!]
  gt: Int
  ngt: Int
  gte: Int
  ngte: Int
  lt: Int
  nlt: Int
  lte: Int
  nlte: Int
}

input StringOperationFilterInput {
  and: [StringOperationFilterInput!]
  or: [StringOperationFilterInput!]
  eq: String
  neq: String
  contains: String
  ncontains: String
  in: [String]
  nin: [String]
  startsWith: String
  nstartsWith: String
  endsWith: String
  nendsWith: String
}

input TaskStatusOperationFilterInput {
  eq: TaskStatus
  neq: TaskStatus
  in: [TaskStatus!]
  nin: [TaskStatus!]
}

enum SortEnumType {
  ASC
  DESC
}
